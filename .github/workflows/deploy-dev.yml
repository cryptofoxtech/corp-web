# GitHub Actions Workflow for Cryptofox Corp Web Deployment
# This workflow focuses on deploying the React frontend to Azure Static Web Apps.
# The API deployment is skipped in this version to isolate frontend issues.

name: Deploy Cryptofox Corp Web (Dev) - Frontend Only

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
      # Consider adding 'develop' here if your development branch also triggers dev deployments

jobs:
  build_and_deploy_frontend: # Renamed job for clarity
    runs-on: ubuntu-latest # Use a Linux runner for the build and deploy steps
    environment: dev # Associate this job with the 'dev' environment (optional, for GitHub Environments)

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Checkout the source code from your repository

      - name: Set up Node.js
        uses: actions/setup-node@v4 # Use Node.js 20.x for consistency with E2E tests
        with:
          node-version: '20.x' # Changed from '18.x' to '20.x' for consistency
          cache: 'npm' # Cache npm dependencies for faster builds

      - name: Install Frontend Dependencies
        working-directory: ./client # Navigate to the client directory
        run: npm install # Install npm packages for the React frontend

      - name: Build Frontend (React)
        working-directory: ./client # Navigate to the client directory
        run: npm run build # Run the build script defined in client/package.json
        env:
          CI: false # Suppress warnings treated as errors in CI environments

      # --- API Deployment Steps Removed/Skipped Below ---
      # The 'Install Backend Dependencies' step is removed as we are not deploying the API in this workflow.

      - name: Deploy Frontend to Azure Static Web Apps
        id: swa_deploy
        uses: azure/static-web-apps-deploy@v1 # Use the Azure Static Web Apps Deploy action
        with:
          # Ensure this secret name matches exactly what you configured in GitHub (AZURE_STATIC_WEB_APPS_API_TOKEN_DEV)
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'client/build' # Points to the built frontend artifacts
          api_location: '' # Set to empty string to explicitly skip API deployment via SWA
          output_location: '' # Empty, as app_location is already the final output
          skip_app_build: true # We built the app in a previous step
          skip_api_build: true # Explicitly skip API build

      - name: Output Deployment Details
        run: |
          echo "Frontend URL: ${{ steps.swa_deploy.outputs.static_web_app_url }}"
          # The backend URL will not be available in this frontend-only deployment
          # echo "Backend URL: ${{ steps.swa_deploy.outputs.api_url }}"